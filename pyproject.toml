[tool.poetry]
name = "formtechtask"
version = "1.0.0"
description = ""
authors = ["Zondrillo <52russiadk@gmail.com>"]
readme = "README.md"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.9"
pandas = "^2.2.0"
xlsxwriter = "^3.1.9"
openpyxl = "^3.1.2"

[tool.poetry.group.test.dependencies]
pytest = "^8.0.0"
assertpy = "^1.1"

[tool.poetry.group.lint.dependencies]
ruff = "^0.2.1"
black = "^24.1.1"

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:pandas.*:"
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = ["N", "B", "A", "E", "W", "F", "ASYNC", "S", "D", "I"]
ignore = [
    "PT001",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D107",
    "D200",
    "D211",
    "D212",
    "S101",
    "S105",
    "S311",
    "W293",
    "UP007"
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[lint.mccabe]
max-complexity = 10

[lint.pydocstyle]
convention = "google"

[lint.flake8-builtins]
builtins-ignorelist = ["id"]
